@using ChildCentre.Slynchogled.Web.Controllers;
@using ChildCentre.Slynchogled.Web.Models.Accounts;
@using ChildCentre.Slynchogled.Web.Models.Accounts.Parents;
@model List<AccountGridModel>

<div class="container mt-5">
    <div>
        <a class="btn btn-primary centre-yellow-color large-button" asp-controller="Accounts" asp-action="New">Нова регистрация</a>
    </div>

    <div class="card mt-4">
        <div class="p-3">
            <h5 class="centre-violet-color">Списък регистрации</h5>
        </div>
        <table class="table table-striped mb-0">
            <thead class="cent">
                <tr>
                    <th scope="col">Регистрация</th>
                    <th scope="col">Деца</th>
                    <th scope="col">Родители</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (AccountGridModel account in Model)
                {
                    <tr data-id="@account.Id">
                        <td>
                            <a asp-controller="Accounts" asp-action="@nameof(AccountsController.AccountDetails)" asp-route-id="@account.Id">
                                @account.Name (@account.Phone)
                            </a>
                        </td>

                        <td>
                            @if (account.Children != null)
                            {
                                foreach (var child in account.Children)
                                {
                                    @: @(child.Name)

                                    @if (child.BirthDate.HasValue)
                                    {
                                        @:(@(child.BirthDate.Value.ToShortDateString()))
                                    }
                                    @: <br>
                                }
                            }
                        </td>

                        <td>
                            @if (account.Parents != null)
                            {
                                foreach (var parent in account.Parents)
                                {
                                    @: @(parent.Name) (@(parent.Phone))
                                    @: <br>
                                }
                            }
                        </td>

                        <td>
                            <button id="add-parent-btn" type="button" class="btn btn-link" data-toggle="tooltip" data-placement="top" title="Добави Родител" data-bs-toggle="modal" data-bs-target="#accounts-grid-modal">
                                <img class="img-button" src="/img/parent-icon.svg" alt="Добави Родител" />
                            </button>

                            <button id="add-child-btn" type="button" class="btn btn-link" data-toggle="tooltip" data-placement="top" title="Добави Дете" data-bs-toggle="modal" data-bs-target="#accounts-grid-modal">
                                <img class="img-button" src="/img/child-icon.svg" alt="Добави Дете" />
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="modal fade" id="accounts-grid-modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#accounts-grid-modal').on('show.bs.modal', function (event) {
                const modal = $(this);

                modal.find('.modal-content').html();

                const button = event.relatedTarget;
                const buttonId = $(button).attr('id');
                const accountId = $(button).closest('tr').attr('data-id');

                let objectName;
                let getUrl;
                let saveUrl;

                if (buttonId.includes('parent')) {
                    objectName = 'parent';
                    getUrl = '@(Url.Action(nameof(AccountsController.ParentNew), "Accounts"))?accountId=' + accountId;
                    saveUrl = '@(Url.Action(nameof(AccountsController.ParentSave), "Accounts"))';
                } else if (buttonId.includes('child')) {
                    objectName = 'child';
                    getUrl = '@(Url.Action(nameof(AccountsController.ChildNew), "Accounts"))?accountId=' + accountId;
                    saveUrl = '@(Url.Action(nameof(AccountsController.ChildSave), "Accounts"))';
                } else {
                    console.error(`Action for type '${buttonId}' is not supported!`);
                }

                $.ajax({
                    type: "GET",
                    url: getUrl,
                })
                    .done(function (html) {
                        modal.find('.modal-content').html(html);

                        $(`#submit-${objectName}-btn`).on('click', function () {
                            let data = $(`#${objectName}-form`).serialize();

                            $.ajax({
                                type: 'POST',
                                url: saveUrl,
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                data: data,
                            })
                                .done(function (response) {
                                    if (response) {
                                        modal.find('.modal-content').html(response);
                                    } else {
                                        location.reload();
                                    }
                                });
                        });
                    });
            });
        });
    </script>
}